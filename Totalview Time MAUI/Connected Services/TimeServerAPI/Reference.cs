//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace TimeServerAPI
{
    using System.Runtime.Serialization;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TRSException", Namespace="http://schemas.datacontract.org/2004/07/Formula.TRS.Server")]
    internal partial class TRSException : object
    {
        
        private TimeServerAPI.TRSExceptionType ExceptionTypeField;
        
        private string TRSMessageField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal TimeServerAPI.TRSExceptionType ExceptionType
        {
            get
            {
                return this.ExceptionTypeField;
            }
            set
            {
                this.ExceptionTypeField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string TRSMessage
        {
            get
            {
                return this.TRSMessageField;
            }
            set
            {
                this.TRSMessageField = value;
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TRSExceptionType", Namespace="http://schemas.datacontract.org/2004/07/Formula.TRS.Calculation")]
    internal enum TRSExceptionType : int
    {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        InternalException = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        InvalidToken = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Unauthorized = 2,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AuthenticationOption", Namespace="http://schemas.datacontract.org/2004/07/Formula.TRS.Server")]
    internal partial class AuthenticationOption : object
    {
        
        private TimeServerAPI.AuthenticationType AuthenticationTypeField;
        
        private string URLField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal TimeServerAPI.AuthenticationType AuthenticationType
        {
            get
            {
                return this.AuthenticationTypeField;
            }
            set
            {
                this.AuthenticationTypeField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string URL
        {
            get
            {
                return this.URLField;
            }
            set
            {
                this.URLField = value;
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AuthenticationType", Namespace="http://schemas.datacontract.org/2004/07/Formula.TRS.Server")]
    internal enum AuthenticationType : int
    {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Classic = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AuthenticationPortal = 1,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TRSUserRight", Namespace="http://schemas.datacontract.org/2004/07/Formula.TRS.Server")]
    internal partial class TRSUserRight : object
    {
        
        private string CaptionField;
        
        private string DescriptionField;
        
        private string ReferenceTypeField;
        
        private string RightTypeField;
        
        private int UserIdField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string Caption
        {
            get
            {
                return this.CaptionField;
            }
            set
            {
                this.CaptionField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string Description
        {
            get
            {
                return this.DescriptionField;
            }
            set
            {
                this.DescriptionField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string ReferenceType
        {
            get
            {
                return this.ReferenceTypeField;
            }
            set
            {
                this.ReferenceTypeField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string RightType
        {
            get
            {
                return this.RightTypeField;
            }
            set
            {
                this.RightTypeField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal int UserId
        {
            get
            {
                return this.UserIdField;
            }
            set
            {
                this.UserIdField = value;
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TRSDatabase.DataChangedType", Namespace="http://schemas.datacontract.org/2004/07/Formula.TRS.Server")]
    internal enum TRSDatabaseDataChangedType : int
    {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AnyChanged = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AlphaChanged = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OmegaChanged = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DialogChanged = 3,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TRSExportState", Namespace="http://schemas.datacontract.org/2004/07/Formula.TRS.Server")]
    internal partial class TRSExportState : object
    {
        
        private bool DeletedField;
        
        private bool ExportedField;
        
        private bool PostedField;
        
        private bool ReadField;
        
        private bool RollbackField;
        
        private System.DateTime StateDateField;
        
        private bool UnknownField;
        
        private int UserIdField;
        
        private bool ValidatedField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal bool Deleted
        {
            get
            {
                return this.DeletedField;
            }
            set
            {
                this.DeletedField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal bool Exported
        {
            get
            {
                return this.ExportedField;
            }
            set
            {
                this.ExportedField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal bool Posted
        {
            get
            {
                return this.PostedField;
            }
            set
            {
                this.PostedField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal bool Read
        {
            get
            {
                return this.ReadField;
            }
            set
            {
                this.ReadField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal bool Rollback
        {
            get
            {
                return this.RollbackField;
            }
            set
            {
                this.RollbackField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal System.DateTime StateDate
        {
            get
            {
                return this.StateDateField;
            }
            set
            {
                this.StateDateField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal bool Unknown
        {
            get
            {
                return this.UnknownField;
            }
            set
            {
                this.UnknownField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal int UserId
        {
            get
            {
                return this.UserIdField;
            }
            set
            {
                this.UserIdField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal bool Validated
        {
            get
            {
                return this.ValidatedField;
            }
            set
            {
                this.ValidatedField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TimeAccountGroupRegistrationSums", Namespace="http://schemas.datacontract.org/2004/07/Formula.TRS.Server")]
    internal partial class TimeAccountGroupRegistrationSums : object
    {
        
        private int BalanceChangesTotalField;
        
        private int RegulationsTotalField;
        
        private int ResourceRecIdField;
        
        private int TimeAccountGroupIdField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal int BalanceChangesTotal
        {
            get
            {
                return this.BalanceChangesTotalField;
            }
            set
            {
                this.BalanceChangesTotalField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal int RegulationsTotal
        {
            get
            {
                return this.RegulationsTotalField;
            }
            set
            {
                this.RegulationsTotalField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal int ResourceRecId
        {
            get
            {
                return this.ResourceRecIdField;
            }
            set
            {
                this.ResourceRecIdField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal int TimeAccountGroupId
        {
            get
            {
                return this.TimeAccountGroupIdField;
            }
            set
            {
                this.TimeAccountGroupIdField = value;
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="TotalviewTRS", ConfigurationName="TimeServerAPI.IWCFDatabase")]
    internal interface IWCFDatabase
    {
        
        [System.ServiceModel.OperationContractAttribute(Action="TotalviewTRS/IWCFDatabase/GetServerVersion", ReplyAction="TotalviewTRS/IWCFDatabase/GetServerVersionResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(TimeServerAPI.TRSException), Action="TotalviewTRS/IWCFDatabase/GetServerVersionTRSExceptionFault", Name="TRSException", Namespace="http://schemas.datacontract.org/2004/07/Formula.TRS.Server")]
        int GetServerVersion();
        
        [System.ServiceModel.OperationContractAttribute(Action="TotalviewTRS/IWCFDatabase/GetServerVersion", ReplyAction="TotalviewTRS/IWCFDatabase/GetServerVersionResponse")]
        System.Threading.Tasks.Task<int> GetServerVersionAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="TotalviewTRS/IWCFDatabase/ThrowTRSException", ReplyAction="TotalviewTRS/IWCFDatabase/ThrowTRSExceptionResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(TimeServerAPI.TRSException), Action="TotalviewTRS/IWCFDatabase/ThrowTRSExceptionTRSExceptionFault", Name="TRSException", Namespace="http://schemas.datacontract.org/2004/07/Formula.TRS.Server")]
        void ThrowTRSException(string Message);
        
        [System.ServiceModel.OperationContractAttribute(Action="TotalviewTRS/IWCFDatabase/ThrowTRSException", ReplyAction="TotalviewTRS/IWCFDatabase/ThrowTRSExceptionResponse")]
        System.Threading.Tasks.Task ThrowTRSExceptionAsync(string Message);
        
        [System.ServiceModel.OperationContractAttribute(Action="TotalviewTRS/IWCFDatabase/UserLogin", ReplyAction="TotalviewTRS/IWCFDatabase/UserLoginResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(TimeServerAPI.TRSException), Action="TotalviewTRS/IWCFDatabase/UserLoginTRSExceptionFault", Name="TRSException", Namespace="http://schemas.datacontract.org/2004/07/Formula.TRS.Server")]
        string UserLogin(string UserName, string Password);
        
        [System.ServiceModel.OperationContractAttribute(Action="TotalviewTRS/IWCFDatabase/UserLogin", ReplyAction="TotalviewTRS/IWCFDatabase/UserLoginResponse")]
        System.Threading.Tasks.Task<string> UserLoginAsync(string UserName, string Password);
        
        [System.ServiceModel.OperationContractAttribute(Action="TotalviewTRS/IWCFDatabase/NetLogin", ReplyAction="TotalviewTRS/IWCFDatabase/NetLoginResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(TimeServerAPI.TRSException), Action="TotalviewTRS/IWCFDatabase/NetLoginTRSExceptionFault", Name="TRSException", Namespace="http://schemas.datacontract.org/2004/07/Formula.TRS.Server")]
        string NetLogin(string UserName, string Domain);
        
        [System.ServiceModel.OperationContractAttribute(Action="TotalviewTRS/IWCFDatabase/NetLogin", ReplyAction="TotalviewTRS/IWCFDatabase/NetLoginResponse")]
        System.Threading.Tasks.Task<string> NetLoginAsync(string UserName, string Domain);
        
        [System.ServiceModel.OperationContractAttribute(Action="TotalviewTRS/IWCFDatabase/GetAuthenticationOption", ReplyAction="TotalviewTRS/IWCFDatabase/GetAuthenticationOptionResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(TimeServerAPI.TRSException), Action="TotalviewTRS/IWCFDatabase/GetAuthenticationOptionTRSExceptionFault", Name="TRSException", Namespace="http://schemas.datacontract.org/2004/07/Formula.TRS.Server")]
        TimeServerAPI.AuthenticationOption GetAuthenticationOption();
        
        [System.ServiceModel.OperationContractAttribute(Action="TotalviewTRS/IWCFDatabase/GetAuthenticationOption", ReplyAction="TotalviewTRS/IWCFDatabase/GetAuthenticationOptionResponse")]
        System.Threading.Tasks.Task<TimeServerAPI.AuthenticationOption> GetAuthenticationOptionAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="TotalviewTRS/IWCFDatabase/GetResources", ReplyAction="TotalviewTRS/IWCFDatabase/GetResourcesResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(TimeServerAPI.TRSException), Action="TotalviewTRS/IWCFDatabase/GetResourcesTRSExceptionFault", Name="TRSException", Namespace="http://schemas.datacontract.org/2004/07/Formula.TRS.Server")]
        System.Xml.XmlElement GetResources();
        
        [System.ServiceModel.OperationContractAttribute(Action="TotalviewTRS/IWCFDatabase/GetResources", ReplyAction="TotalviewTRS/IWCFDatabase/GetResourcesResponse")]
        System.Threading.Tasks.Task<System.Xml.XmlElement> GetResourcesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="TotalviewTRS/IWCFDatabase/GetStates", ReplyAction="TotalviewTRS/IWCFDatabase/GetStatesResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(TimeServerAPI.TRSException), Action="TotalviewTRS/IWCFDatabase/GetStatesTRSExceptionFault", Name="TRSException", Namespace="http://schemas.datacontract.org/2004/07/Formula.TRS.Server")]
        System.Xml.XmlElement GetStates();
        
        [System.ServiceModel.OperationContractAttribute(Action="TotalviewTRS/IWCFDatabase/GetStates", ReplyAction="TotalviewTRS/IWCFDatabase/GetStatesResponse")]
        System.Threading.Tasks.Task<System.Xml.XmlElement> GetStatesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="TotalviewTRS/IWCFDatabase/GetUserDayRegistrations", ReplyAction="TotalviewTRS/IWCFDatabase/GetUserDayRegistrationsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(TimeServerAPI.TRSException), Action="TotalviewTRS/IWCFDatabase/GetUserDayRegistrationsTRSExceptionFault", Name="TRSException", Namespace="http://schemas.datacontract.org/2004/07/Formula.TRS.Server")]
        System.Xml.XmlElement GetUserDayRegistrations(System.DateTime date, int[] UserIDs);
        
        [System.ServiceModel.OperationContractAttribute(Action="TotalviewTRS/IWCFDatabase/GetUserDayRegistrations", ReplyAction="TotalviewTRS/IWCFDatabase/GetUserDayRegistrationsResponse")]
        System.Threading.Tasks.Task<System.Xml.XmlElement> GetUserDayRegistrationsAsync(System.DateTime date, int[] UserIDs);
        
        [System.ServiceModel.OperationContractAttribute(Action="TotalviewTRS/IWCFDatabase/GetUserDayRegistrationsSingleUser", ReplyAction="TotalviewTRS/IWCFDatabase/GetUserDayRegistrationsSingleUserResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(TimeServerAPI.TRSException), Action="TotalviewTRS/IWCFDatabase/GetUserDayRegistrationsSingleUserTRSExceptionFault", Name="TRSException", Namespace="http://schemas.datacontract.org/2004/07/Formula.TRS.Server")]
        System.Xml.XmlElement GetUserDayRegistrationsSingleUser(System.DateTime fromDate, System.DateTime toDate, int UserID);
        
        [System.ServiceModel.OperationContractAttribute(Action="TotalviewTRS/IWCFDatabase/GetUserDayRegistrationsSingleUser", ReplyAction="TotalviewTRS/IWCFDatabase/GetUserDayRegistrationsSingleUserResponse")]
        System.Threading.Tasks.Task<System.Xml.XmlElement> GetUserDayRegistrationsSingleUserAsync(System.DateTime fromDate, System.DateTime toDate, int UserID);
        
        [System.ServiceModel.OperationContractAttribute(Action="TotalviewTRS/IWCFDatabase/GetStateGroupSettings", ReplyAction="TotalviewTRS/IWCFDatabase/GetStateGroupSettingsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(TimeServerAPI.TRSException), Action="TotalviewTRS/IWCFDatabase/GetStateGroupSettingsTRSExceptionFault", Name="TRSException", Namespace="http://schemas.datacontract.org/2004/07/Formula.TRS.Server")]
        System.Xml.XmlElement GetStateGroupSettings(System.DateTime date, int UserId);
        
        [System.ServiceModel.OperationContractAttribute(Action="TotalviewTRS/IWCFDatabase/GetStateGroupSettings", ReplyAction="TotalviewTRS/IWCFDatabase/GetStateGroupSettingsResponse")]
        System.Threading.Tasks.Task<System.Xml.XmlElement> GetStateGroupSettingsAsync(System.DateTime date, int UserId);
        
        [System.ServiceModel.OperationContractAttribute(Action="TotalviewTRS/IWCFDatabase/GetAgreement", ReplyAction="TotalviewTRS/IWCFDatabase/GetAgreementResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(TimeServerAPI.TRSException), Action="TotalviewTRS/IWCFDatabase/GetAgreementTRSExceptionFault", Name="TRSException", Namespace="http://schemas.datacontract.org/2004/07/Formula.TRS.Server")]
        System.Xml.XmlElement GetAgreement(System.DateTime date, int UserId);
        
        [System.ServiceModel.OperationContractAttribute(Action="TotalviewTRS/IWCFDatabase/GetAgreement", ReplyAction="TotalviewTRS/IWCFDatabase/GetAgreementResponse")]
        System.Threading.Tasks.Task<System.Xml.XmlElement> GetAgreementAsync(System.DateTime date, int UserId);
        
        [System.ServiceModel.OperationContractAttribute(Action="TotalviewTRS/IWCFDatabase/GetCountTypeSettings", ReplyAction="TotalviewTRS/IWCFDatabase/GetCountTypeSettingsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(TimeServerAPI.TRSException), Action="TotalviewTRS/IWCFDatabase/GetCountTypeSettingsTRSExceptionFault", Name="TRSException", Namespace="http://schemas.datacontract.org/2004/07/Formula.TRS.Server")]
        System.Xml.XmlElement GetCountTypeSettings(System.DateTime date, int UserId);
        
        [System.ServiceModel.OperationContractAttribute(Action="TotalviewTRS/IWCFDatabase/GetCountTypeSettings", ReplyAction="TotalviewTRS/IWCFDatabase/GetCountTypeSettingsResponse")]
        System.Threading.Tasks.Task<System.Xml.XmlElement> GetCountTypeSettingsAsync(System.DateTime date, int UserId);
        
        [System.ServiceModel.OperationContractAttribute(Action="TotalviewTRS/IWCFDatabase/GetParameters", ReplyAction="TotalviewTRS/IWCFDatabase/GetParametersResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(TimeServerAPI.TRSException), Action="TotalviewTRS/IWCFDatabase/GetParametersTRSExceptionFault", Name="TRSException", Namespace="http://schemas.datacontract.org/2004/07/Formula.TRS.Server")]
        System.Xml.XmlElement GetParameters(System.DateTime date, int UserId);
        
        [System.ServiceModel.OperationContractAttribute(Action="TotalviewTRS/IWCFDatabase/GetParameters", ReplyAction="TotalviewTRS/IWCFDatabase/GetParametersResponse")]
        System.Threading.Tasks.Task<System.Xml.XmlElement> GetParametersAsync(System.DateTime date, int UserId);
        
        [System.ServiceModel.OperationContractAttribute(Action="TotalviewTRS/IWCFDatabase/GetParameter", ReplyAction="TotalviewTRS/IWCFDatabase/GetParameterResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(TimeServerAPI.TRSException), Action="TotalviewTRS/IWCFDatabase/GetParameterTRSExceptionFault", Name="TRSException", Namespace="http://schemas.datacontract.org/2004/07/Formula.TRS.Server")]
        string GetParameter(string parameterName);
        
        [System.ServiceModel.OperationContractAttribute(Action="TotalviewTRS/IWCFDatabase/GetParameter", ReplyAction="TotalviewTRS/IWCFDatabase/GetParameterResponse")]
        System.Threading.Tasks.Task<string> GetParameterAsync(string parameterName);
        
        [System.ServiceModel.OperationContractAttribute(Action="TotalviewTRS/IWCFDatabase/GetStateBalanceSettings", ReplyAction="TotalviewTRS/IWCFDatabase/GetStateBalanceSettingsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(TimeServerAPI.TRSException), Action="TotalviewTRS/IWCFDatabase/GetStateBalanceSettingsTRSExceptionFault", Name="TRSException", Namespace="http://schemas.datacontract.org/2004/07/Formula.TRS.Server")]
        System.Xml.XmlElement GetStateBalanceSettings(System.DateTime date, int UserId);
        
        [System.ServiceModel.OperationContractAttribute(Action="TotalviewTRS/IWCFDatabase/GetStateBalanceSettings", ReplyAction="TotalviewTRS/IWCFDatabase/GetStateBalanceSettingsResponse")]
        System.Threading.Tasks.Task<System.Xml.XmlElement> GetStateBalanceSettingsAsync(System.DateTime date, int UserId);
        
        [System.ServiceModel.OperationContractAttribute(Action="TotalviewTRS/IWCFDatabase/GetReBalanceSettings", ReplyAction="TotalviewTRS/IWCFDatabase/GetReBalanceSettingsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(TimeServerAPI.TRSException), Action="TotalviewTRS/IWCFDatabase/GetReBalanceSettingsTRSExceptionFault", Name="TRSException", Namespace="http://schemas.datacontract.org/2004/07/Formula.TRS.Server")]
        System.Xml.XmlElement GetReBalanceSettings(System.DateTime date, int UserId);
        
        [System.ServiceModel.OperationContractAttribute(Action="TotalviewTRS/IWCFDatabase/GetReBalanceSettings", ReplyAction="TotalviewTRS/IWCFDatabase/GetReBalanceSettingsResponse")]
        System.Threading.Tasks.Task<System.Xml.XmlElement> GetReBalanceSettingsAsync(System.DateTime date, int UserId);
        
        [System.ServiceModel.OperationContractAttribute(Action="TotalviewTRS/IWCFDatabase/GetBalanceDefinitions", ReplyAction="TotalviewTRS/IWCFDatabase/GetBalanceDefinitionsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(TimeServerAPI.TRSException), Action="TotalviewTRS/IWCFDatabase/GetBalanceDefinitionsTRSExceptionFault", Name="TRSException", Namespace="http://schemas.datacontract.org/2004/07/Formula.TRS.Server")]
        System.Xml.XmlElement GetBalanceDefinitions();
        
        [System.ServiceModel.OperationContractAttribute(Action="TotalviewTRS/IWCFDatabase/GetBalanceDefinitions", ReplyAction="TotalviewTRS/IWCFDatabase/GetBalanceDefinitionsResponse")]
        System.Threading.Tasks.Task<System.Xml.XmlElement> GetBalanceDefinitionsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="TotalviewTRS/IWCFDatabase/SaveRegistrations", ReplyAction="TotalviewTRS/IWCFDatabase/SaveRegistrationsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(TimeServerAPI.TRSException), Action="TotalviewTRS/IWCFDatabase/SaveRegistrationsTRSExceptionFault", Name="TRSException", Namespace="http://schemas.datacontract.org/2004/07/Formula.TRS.Server")]
        int SaveRegistrations(System.Xml.XmlElement Registrations, System.Xml.XmlElement BalanceCorrections, System.DateTime date, int UserId, string Comment, int ModifyingUser, int Validated, int DataChanged, int ValidationChanged, int CorrectionRequestId);
        
        [System.ServiceModel.OperationContractAttribute(Action="TotalviewTRS/IWCFDatabase/SaveRegistrations", ReplyAction="TotalviewTRS/IWCFDatabase/SaveRegistrationsResponse")]
        System.Threading.Tasks.Task<int> SaveRegistrationsAsync(System.Xml.XmlElement Registrations, System.Xml.XmlElement BalanceCorrections, System.DateTime date, int UserId, string Comment, int ModifyingUser, int Validated, int DataChanged, int ValidationChanged, int CorrectionRequestId);
        
        [System.ServiceModel.OperationContractAttribute(Action="TotalviewTRS/IWCFDatabase/SaveRegistrationsAndBalances", ReplyAction="TotalviewTRS/IWCFDatabase/SaveRegistrationsAndBalancesResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(TimeServerAPI.TRSException), Action="TotalviewTRS/IWCFDatabase/SaveRegistrationsAndBalancesTRSExceptionFault", Name="TRSException", Namespace="http://schemas.datacontract.org/2004/07/Formula.TRS.Server")]
        void SaveRegistrationsAndBalances(System.Xml.XmlElement Registrations, System.Xml.XmlElement Balances, System.Xml.XmlElement BalanceCorrections, System.DateTime date, int UserId, string Comment, int ModifyingUser, int Validated, int DataChanged, int ValidationChanged, int CorrectionRequestId);
        
        [System.ServiceModel.OperationContractAttribute(Action="TotalviewTRS/IWCFDatabase/SaveRegistrationsAndBalances", ReplyAction="TotalviewTRS/IWCFDatabase/SaveRegistrationsAndBalancesResponse")]
        System.Threading.Tasks.Task SaveRegistrationsAndBalancesAsync(System.Xml.XmlElement Registrations, System.Xml.XmlElement Balances, System.Xml.XmlElement BalanceCorrections, System.DateTime date, int UserId, string Comment, int ModifyingUser, int Validated, int DataChanged, int ValidationChanged, int CorrectionRequestId);
        
        [System.ServiceModel.OperationContractAttribute(Action="TotalviewTRS/IWCFDatabase/SaveRegistrationsAndBalancesFromXElement", ReplyAction="TotalviewTRS/IWCFDatabase/SaveRegistrationsAndBalancesFromXElementResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(TimeServerAPI.TRSException), Action="TotalviewTRS/IWCFDatabase/SaveRegistrationsAndBalancesFromXElementTRSExceptionFau" +
            "lt", Name="TRSException", Namespace="http://schemas.datacontract.org/2004/07/Formula.TRS.Server")]
        System.Xml.XmlElement SaveRegistrationsAndBalancesFromXElement(System.Xml.XmlElement Registratio);
        
        [System.ServiceModel.OperationContractAttribute(Action="TotalviewTRS/IWCFDatabase/SaveRegistrationsAndBalancesFromXElement", ReplyAction="TotalviewTRS/IWCFDatabase/SaveRegistrationsAndBalancesFromXElementResponse")]
        System.Threading.Tasks.Task<System.Xml.XmlElement> SaveRegistrationsAndBalancesFromXElementAsync(System.Xml.XmlElement Registratio);
        
        [System.ServiceModel.OperationContractAttribute(Action="TotalviewTRS/IWCFDatabase/CalculateAlpha", ReplyAction="TotalviewTRS/IWCFDatabase/CalculateAlphaResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(TimeServerAPI.TRSException), Action="TotalviewTRS/IWCFDatabase/CalculateAlphaTRSExceptionFault", Name="TRSException", Namespace="http://schemas.datacontract.org/2004/07/Formula.TRS.Server")]
        void CalculateAlpha(System.DateTime date, int UserId, string Comment, int ModifyingUser, int Validated);
        
        [System.ServiceModel.OperationContractAttribute(Action="TotalviewTRS/IWCFDatabase/CalculateAlpha", ReplyAction="TotalviewTRS/IWCFDatabase/CalculateAlphaResponse")]
        System.Threading.Tasks.Task CalculateAlphaAsync(System.DateTime date, int UserId, string Comment, int ModifyingUser, int Validated);
        
        [System.ServiceModel.OperationContractAttribute(Action="TotalviewTRS/IWCFDatabase/CalculateAlphaForPeriod", ReplyAction="TotalviewTRS/IWCFDatabase/CalculateAlphaForPeriodResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(TimeServerAPI.TRSException), Action="TotalviewTRS/IWCFDatabase/CalculateAlphaForPeriodTRSExceptionFault", Name="TRSException", Namespace="http://schemas.datacontract.org/2004/07/Formula.TRS.Server")]
        void CalculateAlphaForPeriod(System.DateTime StartDate, System.DateTime EndDate, int UserId, string Comment, int ModifyingUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="TotalviewTRS/IWCFDatabase/CalculateAlphaForPeriod", ReplyAction="TotalviewTRS/IWCFDatabase/CalculateAlphaForPeriodResponse")]
        System.Threading.Tasks.Task CalculateAlphaForPeriodAsync(System.DateTime StartDate, System.DateTime EndDate, int UserId, string Comment, int ModifyingUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="TotalviewTRS/IWCFDatabase/CalculateAlphaForPeriodWithSkip", ReplyAction="TotalviewTRS/IWCFDatabase/CalculateAlphaForPeriodWithSkipResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(TimeServerAPI.TRSException), Action="TotalviewTRS/IWCFDatabase/CalculateAlphaForPeriodWithSkipTRSExceptionFault", Name="TRSException", Namespace="http://schemas.datacontract.org/2004/07/Formula.TRS.Server")]
        void CalculateAlphaForPeriodWithSkip(System.DateTime StartDate, System.DateTime EndDate, int UserId, string Comment, int ModifyingUser, string SkipDays);
        
        [System.ServiceModel.OperationContractAttribute(Action="TotalviewTRS/IWCFDatabase/CalculateAlphaForPeriodWithSkip", ReplyAction="TotalviewTRS/IWCFDatabase/CalculateAlphaForPeriodWithSkipResponse")]
        System.Threading.Tasks.Task CalculateAlphaForPeriodWithSkipAsync(System.DateTime StartDate, System.DateTime EndDate, int UserId, string Comment, int ModifyingUser, string SkipDays);
        
        [System.ServiceModel.OperationContractAttribute(Action="TotalviewTRS/IWCFDatabase/GetUserRights", ReplyAction="TotalviewTRS/IWCFDatabase/GetUserRightsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(TimeServerAPI.TRSException), Action="TotalviewTRS/IWCFDatabase/GetUserRightsTRSExceptionFault", Name="TRSException", Namespace="http://schemas.datacontract.org/2004/07/Formula.TRS.Server")]
        TimeServerAPI.TRSUserRight[] GetUserRights(int UserId);
        
        [System.ServiceModel.OperationContractAttribute(Action="TotalviewTRS/IWCFDatabase/GetUserRights", ReplyAction="TotalviewTRS/IWCFDatabase/GetUserRightsResponse")]
        System.Threading.Tasks.Task<TimeServerAPI.TRSUserRight[]> GetUserRightsAsync(int UserId);
        
        [System.ServiceModel.OperationContractAttribute(Action="TotalviewTRS/IWCFDatabase/HasServerDataChanged", ReplyAction="TotalviewTRS/IWCFDatabase/HasServerDataChangedResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(TimeServerAPI.TRSException), Action="TotalviewTRS/IWCFDatabase/HasServerDataChangedTRSExceptionFault", Name="TRSException", Namespace="http://schemas.datacontract.org/2004/07/Formula.TRS.Server")]
        bool HasServerDataChanged(TimeServerAPI.TRSDatabaseDataChangedType ChangedType, System.DateTime Since);
        
        [System.ServiceModel.OperationContractAttribute(Action="TotalviewTRS/IWCFDatabase/HasServerDataChanged", ReplyAction="TotalviewTRS/IWCFDatabase/HasServerDataChangedResponse")]
        System.Threading.Tasks.Task<bool> HasServerDataChangedAsync(TimeServerAPI.TRSDatabaseDataChangedType ChangedType, System.DateTime Since);
        
        [System.ServiceModel.OperationContractAttribute(Action="TotalviewTRS/IWCFDatabase/RefreshToken", ReplyAction="TotalviewTRS/IWCFDatabase/RefreshTokenResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(TimeServerAPI.TRSException), Action="TotalviewTRS/IWCFDatabase/RefreshTokenTRSExceptionFault", Name="TRSException", Namespace="http://schemas.datacontract.org/2004/07/Formula.TRS.Server")]
        string RefreshToken(string token);
        
        [System.ServiceModel.OperationContractAttribute(Action="TotalviewTRS/IWCFDatabase/RefreshToken", ReplyAction="TotalviewTRS/IWCFDatabase/RefreshTokenResponse")]
        System.Threading.Tasks.Task<string> RefreshTokenAsync(string token);
        
        [System.ServiceModel.OperationContractAttribute(Action="TotalviewTRS/IWCFDatabase/GetRequests", ReplyAction="TotalviewTRS/IWCFDatabase/GetRequestsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(TimeServerAPI.TRSException), Action="TotalviewTRS/IWCFDatabase/GetRequestsTRSExceptionFault", Name="TRSException", Namespace="http://schemas.datacontract.org/2004/07/Formula.TRS.Server")]
        System.Xml.XmlElement GetRequests(int ResourceRecId, bool IncludeClosed);
        
        [System.ServiceModel.OperationContractAttribute(Action="TotalviewTRS/IWCFDatabase/GetRequests", ReplyAction="TotalviewTRS/IWCFDatabase/GetRequestsResponse")]
        System.Threading.Tasks.Task<System.Xml.XmlElement> GetRequestsAsync(int ResourceRecId, bool IncludeClosed);
        
        [System.ServiceModel.OperationContractAttribute(Action="TotalviewTRS/IWCFDatabase/GetCustomFields", ReplyAction="TotalviewTRS/IWCFDatabase/GetCustomFieldsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(TimeServerAPI.TRSException), Action="TotalviewTRS/IWCFDatabase/GetCustomFieldsTRSExceptionFault", Name="TRSException", Namespace="http://schemas.datacontract.org/2004/07/Formula.TRS.Server")]
        System.Xml.XmlElement GetCustomFields();
        
        [System.ServiceModel.OperationContractAttribute(Action="TotalviewTRS/IWCFDatabase/GetCustomFields", ReplyAction="TotalviewTRS/IWCFDatabase/GetCustomFieldsResponse")]
        System.Threading.Tasks.Task<System.Xml.XmlElement> GetCustomFieldsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="TotalviewTRS/IWCFDatabase/GetRequest", ReplyAction="TotalviewTRS/IWCFDatabase/GetRequestResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(TimeServerAPI.TRSException), Action="TotalviewTRS/IWCFDatabase/GetRequestTRSExceptionFault", Name="TRSException", Namespace="http://schemas.datacontract.org/2004/07/Formula.TRS.Server")]
        System.Xml.XmlElement GetRequest(int RequestRecId);
        
        [System.ServiceModel.OperationContractAttribute(Action="TotalviewTRS/IWCFDatabase/GetRequest", ReplyAction="TotalviewTRS/IWCFDatabase/GetRequestResponse")]
        System.Threading.Tasks.Task<System.Xml.XmlElement> GetRequestAsync(int RequestRecId);
        
        [System.ServiceModel.OperationContractAttribute(Action="TotalviewTRS/IWCFDatabase/GetActiveRequestsForResources", ReplyAction="TotalviewTRS/IWCFDatabase/GetActiveRequestsForResourcesResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(TimeServerAPI.TRSException), Action="TotalviewTRS/IWCFDatabase/GetActiveRequestsForResourcesTRSExceptionFault", Name="TRSException", Namespace="http://schemas.datacontract.org/2004/07/Formula.TRS.Server")]
        System.Xml.XmlElement GetActiveRequestsForResources(int[] UserIDs);
        
        [System.ServiceModel.OperationContractAttribute(Action="TotalviewTRS/IWCFDatabase/GetActiveRequestsForResources", ReplyAction="TotalviewTRS/IWCFDatabase/GetActiveRequestsForResourcesResponse")]
        System.Threading.Tasks.Task<System.Xml.XmlElement> GetActiveRequestsForResourcesAsync(int[] UserIDs);
        
        [System.ServiceModel.OperationContractAttribute(Action="TotalviewTRS/IWCFDatabase/CreateRequestFromXML", ReplyAction="TotalviewTRS/IWCFDatabase/CreateRequestFromXMLResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(TimeServerAPI.TRSException), Action="TotalviewTRS/IWCFDatabase/CreateRequestFromXMLTRSExceptionFault", Name="TRSException", Namespace="http://schemas.datacontract.org/2004/07/Formula.TRS.Server")]
        int CreateRequestFromXML(System.Xml.XmlElement RequestDocument);
        
        [System.ServiceModel.OperationContractAttribute(Action="TotalviewTRS/IWCFDatabase/CreateRequestFromXML", ReplyAction="TotalviewTRS/IWCFDatabase/CreateRequestFromXMLResponse")]
        System.Threading.Tasks.Task<int> CreateRequestFromXMLAsync(System.Xml.XmlElement RequestDocument);
        
        [System.ServiceModel.OperationContractAttribute(Action="TotalviewTRS/IWCFDatabase/SetRequestStatus", ReplyAction="TotalviewTRS/IWCFDatabase/SetRequestStatusResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(TimeServerAPI.TRSException), Action="TotalviewTRS/IWCFDatabase/SetRequestStatusTRSExceptionFault", Name="TRSException", Namespace="http://schemas.datacontract.org/2004/07/Formula.TRS.Server")]
        void SetRequestStatus(int RequestId, int NewStatus, string Comment, int MadeBy);
        
        [System.ServiceModel.OperationContractAttribute(Action="TotalviewTRS/IWCFDatabase/SetRequestStatus", ReplyAction="TotalviewTRS/IWCFDatabase/SetRequestStatusResponse")]
        System.Threading.Tasks.Task SetRequestStatusAsync(int RequestId, int NewStatus, string Comment, int MadeBy);
        
        [System.ServiceModel.OperationContractAttribute(Action="TotalviewTRS/IWCFDatabase/GetTotalBalancesByDateAndResource", ReplyAction="TotalviewTRS/IWCFDatabase/GetTotalBalancesByDateAndResourceResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(TimeServerAPI.TRSException), Action="TotalviewTRS/IWCFDatabase/GetTotalBalancesByDateAndResourceTRSExceptionFault", Name="TRSException", Namespace="http://schemas.datacontract.org/2004/07/Formula.TRS.Server")]
        System.Xml.XmlElement GetTotalBalancesByDateAndResource(System.DateTime Date, int ResourceId);
        
        [System.ServiceModel.OperationContractAttribute(Action="TotalviewTRS/IWCFDatabase/GetTotalBalancesByDateAndResource", ReplyAction="TotalviewTRS/IWCFDatabase/GetTotalBalancesByDateAndResourceResponse")]
        System.Threading.Tasks.Task<System.Xml.XmlElement> GetTotalBalancesByDateAndResourceAsync(System.DateTime Date, int ResourceId);
        
        [System.ServiceModel.OperationContractAttribute(Action="TotalviewTRS/IWCFDatabase/GetResourceDayLog", ReplyAction="TotalviewTRS/IWCFDatabase/GetResourceDayLogResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(TimeServerAPI.TRSException), Action="TotalviewTRS/IWCFDatabase/GetResourceDayLogTRSExceptionFault", Name="TRSException", Namespace="http://schemas.datacontract.org/2004/07/Formula.TRS.Server")]
        System.Xml.XmlElement GetResourceDayLog(System.DateTime Date, int ResourceId);
        
        [System.ServiceModel.OperationContractAttribute(Action="TotalviewTRS/IWCFDatabase/GetResourceDayLog", ReplyAction="TotalviewTRS/IWCFDatabase/GetResourceDayLogResponse")]
        System.Threading.Tasks.Task<System.Xml.XmlElement> GetResourceDayLogAsync(System.DateTime Date, int ResourceId);
        
        [System.ServiceModel.OperationContractAttribute(Action="TotalviewTRS/IWCFDatabase/GetAlphaOmegaState", ReplyAction="TotalviewTRS/IWCFDatabase/GetAlphaOmegaStateResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(TimeServerAPI.TRSException), Action="TotalviewTRS/IWCFDatabase/GetAlphaOmegaStateTRSExceptionFault", Name="TRSException", Namespace="http://schemas.datacontract.org/2004/07/Formula.TRS.Server")]
        System.Xml.XmlElement GetAlphaOmegaState(System.DateTime DateFrom, System.DateTime DateTo, int ResourceId);
        
        [System.ServiceModel.OperationContractAttribute(Action="TotalviewTRS/IWCFDatabase/GetAlphaOmegaState", ReplyAction="TotalviewTRS/IWCFDatabase/GetAlphaOmegaStateResponse")]
        System.Threading.Tasks.Task<System.Xml.XmlElement> GetAlphaOmegaStateAsync(System.DateTime DateFrom, System.DateTime DateTo, int ResourceId);
        
        [System.ServiceModel.OperationContractAttribute(Action="TotalviewTRS/IWCFDatabase/GetExportState", ReplyAction="TotalviewTRS/IWCFDatabase/GetExportStateResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(TimeServerAPI.TRSException), Action="TotalviewTRS/IWCFDatabase/GetExportStateTRSExceptionFault", Name="TRSException", Namespace="http://schemas.datacontract.org/2004/07/Formula.TRS.Server")]
        TimeServerAPI.TRSExportState[] GetExportState(System.DateTime DateFrom, System.DateTime DateTo, int[] UserIDs);
        
        [System.ServiceModel.OperationContractAttribute(Action="TotalviewTRS/IWCFDatabase/GetExportState", ReplyAction="TotalviewTRS/IWCFDatabase/GetExportStateResponse")]
        System.Threading.Tasks.Task<TimeServerAPI.TRSExportState[]> GetExportStateAsync(System.DateTime DateFrom, System.DateTime DateTo, int[] UserIDs);
        
        [System.ServiceModel.OperationContractAttribute(Action="TotalviewTRS/IWCFDatabase/GetUserAverageContractDayLength", ReplyAction="TotalviewTRS/IWCFDatabase/GetUserAverageContractDayLengthResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(TimeServerAPI.TRSException), Action="TotalviewTRS/IWCFDatabase/GetUserAverageContractDayLengthTRSExceptionFault", Name="TRSException", Namespace="http://schemas.datacontract.org/2004/07/Formula.TRS.Server")]
        System.Xml.XmlElement GetUserAverageContractDayLength(System.DateTime VersionDate, int[] UserIDs);
        
        [System.ServiceModel.OperationContractAttribute(Action="TotalviewTRS/IWCFDatabase/GetUserAverageContractDayLength", ReplyAction="TotalviewTRS/IWCFDatabase/GetUserAverageContractDayLengthResponse")]
        System.Threading.Tasks.Task<System.Xml.XmlElement> GetUserAverageContractDayLengthAsync(System.DateTime VersionDate, int[] UserIDs);
        
        [System.ServiceModel.OperationContractAttribute(Action="TotalviewTRS/IWCFDatabase/GetUserAttachmentsDefinition", ReplyAction="TotalviewTRS/IWCFDatabase/GetUserAttachmentsDefinitionResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(TimeServerAPI.TRSException), Action="TotalviewTRS/IWCFDatabase/GetUserAttachmentsDefinitionTRSExceptionFault", Name="TRSException", Namespace="http://schemas.datacontract.org/2004/07/Formula.TRS.Server")]
        System.Xml.XmlElement GetUserAttachmentsDefinition(int ResourceID);
        
        [System.ServiceModel.OperationContractAttribute(Action="TotalviewTRS/IWCFDatabase/GetUserAttachmentsDefinition", ReplyAction="TotalviewTRS/IWCFDatabase/GetUserAttachmentsDefinitionResponse")]
        System.Threading.Tasks.Task<System.Xml.XmlElement> GetUserAttachmentsDefinitionAsync(int ResourceID);
        
        [System.ServiceModel.OperationContractAttribute(Action="TotalviewTRS/IWCFDatabase/GetUsersAttachmentsDefinition", ReplyAction="TotalviewTRS/IWCFDatabase/GetUsersAttachmentsDefinitionResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(TimeServerAPI.TRSException), Action="TotalviewTRS/IWCFDatabase/GetUsersAttachmentsDefinitionTRSExceptionFault", Name="TRSException", Namespace="http://schemas.datacontract.org/2004/07/Formula.TRS.Server")]
        System.Xml.XmlElement GetUsersAttachmentsDefinition(int[] ResourceID);
        
        [System.ServiceModel.OperationContractAttribute(Action="TotalviewTRS/IWCFDatabase/GetUsersAttachmentsDefinition", ReplyAction="TotalviewTRS/IWCFDatabase/GetUsersAttachmentsDefinitionResponse")]
        System.Threading.Tasks.Task<System.Xml.XmlElement> GetUsersAttachmentsDefinitionAsync(int[] ResourceID);
        
        [System.ServiceModel.OperationContractAttribute(Action="TotalviewTRS/IWCFDatabase/GetUserAttachmentsData", ReplyAction="TotalviewTRS/IWCFDatabase/GetUserAttachmentsDataResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(TimeServerAPI.TRSException), Action="TotalviewTRS/IWCFDatabase/GetUserAttachmentsDataTRSExceptionFault", Name="TRSException", Namespace="http://schemas.datacontract.org/2004/07/Formula.TRS.Server")]
        System.Xml.XmlElement GetUserAttachmentsData(int ResourceID, string StateID, string AttachmentID, string ParentFieldID, string ParentID, string UserData);
        
        [System.ServiceModel.OperationContractAttribute(Action="TotalviewTRS/IWCFDatabase/GetUserAttachmentsData", ReplyAction="TotalviewTRS/IWCFDatabase/GetUserAttachmentsDataResponse")]
        System.Threading.Tasks.Task<System.Xml.XmlElement> GetUserAttachmentsDataAsync(int ResourceID, string StateID, string AttachmentID, string ParentFieldID, string ParentID, string UserData);
        
        [System.ServiceModel.OperationContractAttribute(Action="TotalviewTRS/IWCFDatabase/GetResetAtMidnigthStateRecId", ReplyAction="TotalviewTRS/IWCFDatabase/GetResetAtMidnigthStateRecIdResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(TimeServerAPI.TRSException), Action="TotalviewTRS/IWCFDatabase/GetResetAtMidnigthStateRecIdTRSExceptionFault", Name="TRSException", Namespace="http://schemas.datacontract.org/2004/07/Formula.TRS.Server")]
        int GetResetAtMidnigthStateRecId();
        
        [System.ServiceModel.OperationContractAttribute(Action="TotalviewTRS/IWCFDatabase/GetResetAtMidnigthStateRecId", ReplyAction="TotalviewTRS/IWCFDatabase/GetResetAtMidnigthStateRecIdResponse")]
        System.Threading.Tasks.Task<int> GetResetAtMidnigthStateRecIdAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="TotalviewTRS/IWCFDatabase/GetSumTable", ReplyAction="TotalviewTRS/IWCFDatabase/GetSumTableResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(TimeServerAPI.TRSException), Action="TotalviewTRS/IWCFDatabase/GetSumTableTRSExceptionFault", Name="TRSException", Namespace="http://schemas.datacontract.org/2004/07/Formula.TRS.Server")]
        System.Xml.XmlElement GetSumTable(System.DateTime fromDate, System.DateTime toDate, int UserId, int[] WantedBalances);
        
        [System.ServiceModel.OperationContractAttribute(Action="TotalviewTRS/IWCFDatabase/GetSumTable", ReplyAction="TotalviewTRS/IWCFDatabase/GetSumTableResponse")]
        System.Threading.Tasks.Task<System.Xml.XmlElement> GetSumTableAsync(System.DateTime fromDate, System.DateTime toDate, int UserId, int[] WantedBalances);
        
        [System.ServiceModel.OperationContractAttribute(Action="TotalviewTRS/IWCFDatabase/SQLToXElement", ReplyAction="TotalviewTRS/IWCFDatabase/SQLToXElementResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(TimeServerAPI.TRSException), Action="TotalviewTRS/IWCFDatabase/SQLToXElementTRSExceptionFault", Name="TRSException", Namespace="http://schemas.datacontract.org/2004/07/Formula.TRS.Server")]
        System.Xml.XmlElement SQLToXElement(string sql, string tableName, string recordName);
        
        [System.ServiceModel.OperationContractAttribute(Action="TotalviewTRS/IWCFDatabase/SQLToXElement", ReplyAction="TotalviewTRS/IWCFDatabase/SQLToXElementResponse")]
        System.Threading.Tasks.Task<System.Xml.XmlElement> SQLToXElementAsync(string sql, string tableName, string recordName);
        
        [System.ServiceModel.OperationContractAttribute(Action="TotalviewTRS/IWCFDatabase/SetValidatedPeriodForUsers", ReplyAction="TotalviewTRS/IWCFDatabase/SetValidatedPeriodForUsersResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(TimeServerAPI.TRSException), Action="TotalviewTRS/IWCFDatabase/SetValidatedPeriodForUsersTRSExceptionFault", Name="TRSException", Namespace="http://schemas.datacontract.org/2004/07/Formula.TRS.Server")]
        void SetValidatedPeriodForUsers(System.DateTime DateFrom, System.DateTime DateTo, int[] UserIDs, int Validated, int ModifyingUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="TotalviewTRS/IWCFDatabase/SetValidatedPeriodForUsers", ReplyAction="TotalviewTRS/IWCFDatabase/SetValidatedPeriodForUsersResponse")]
        System.Threading.Tasks.Task SetValidatedPeriodForUsersAsync(System.DateTime DateFrom, System.DateTime DateTo, int[] UserIDs, int Validated, int ModifyingUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="TotalviewTRS/IWCFDatabase/SetValidatedDaysForUser", ReplyAction="TotalviewTRS/IWCFDatabase/SetValidatedDaysForUserResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(TimeServerAPI.TRSException), Action="TotalviewTRS/IWCFDatabase/SetValidatedDaysForUserTRSExceptionFault", Name="TRSException", Namespace="http://schemas.datacontract.org/2004/07/Formula.TRS.Server")]
        void SetValidatedDaysForUser(System.DateTime[] Days, int UserID, int Validated, int ModifyingUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="TotalviewTRS/IWCFDatabase/SetValidatedDaysForUser", ReplyAction="TotalviewTRS/IWCFDatabase/SetValidatedDaysForUserResponse")]
        System.Threading.Tasks.Task SetValidatedDaysForUserAsync(System.DateTime[] Days, int UserID, int Validated, int ModifyingUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="TotalviewTRS/IWCFDatabase/SetAdminNotificationSubscriptionList", ReplyAction="TotalviewTRS/IWCFDatabase/SetAdminNotificationSubscriptionListResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(TimeServerAPI.TRSException), Action="TotalviewTRS/IWCFDatabase/SetAdminNotificationSubscriptionListTRSExceptionFault", Name="TRSException", Namespace="http://schemas.datacontract.org/2004/07/Formula.TRS.Server")]
        void SetAdminNotificationSubscriptionList(int[] PersonRecIdList, int[] CustomFieldRecIdList, int UserID);
        
        [System.ServiceModel.OperationContractAttribute(Action="TotalviewTRS/IWCFDatabase/SetAdminNotificationSubscriptionList", ReplyAction="TotalviewTRS/IWCFDatabase/SetAdminNotificationSubscriptionListResponse")]
        System.Threading.Tasks.Task SetAdminNotificationSubscriptionListAsync(int[] PersonRecIdList, int[] CustomFieldRecIdList, int UserID);
        
        [System.ServiceModel.OperationContractAttribute(Action="TotalviewTRS/IWCFDatabase/GetAdminNotificationSubscriptionList", ReplyAction="TotalviewTRS/IWCFDatabase/GetAdminNotificationSubscriptionListResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(TimeServerAPI.TRSException), Action="TotalviewTRS/IWCFDatabase/GetAdminNotificationSubscriptionListTRSExceptionFault", Name="TRSException", Namespace="http://schemas.datacontract.org/2004/07/Formula.TRS.Server")]
        System.Xml.XmlElement GetAdminNotificationSubscriptionList(int UserID);
        
        [System.ServiceModel.OperationContractAttribute(Action="TotalviewTRS/IWCFDatabase/GetAdminNotificationSubscriptionList", ReplyAction="TotalviewTRS/IWCFDatabase/GetAdminNotificationSubscriptionListResponse")]
        System.Threading.Tasks.Task<System.Xml.XmlElement> GetAdminNotificationSubscriptionListAsync(int UserID);
        
        [System.ServiceModel.OperationContractAttribute(Action="TotalviewTRS/IWCFDatabase/SetAdminRequestSubscriptionType", ReplyAction="TotalviewTRS/IWCFDatabase/SetAdminRequestSubscriptionTypeResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(TimeServerAPI.TRSException), Action="TotalviewTRS/IWCFDatabase/SetAdminRequestSubscriptionTypeTRSExceptionFault", Name="TRSException", Namespace="http://schemas.datacontract.org/2004/07/Formula.TRS.Server")]
        void SetAdminRequestSubscriptionType(string subscriptionType, int subscriberid);
        
        [System.ServiceModel.OperationContractAttribute(Action="TotalviewTRS/IWCFDatabase/SetAdminRequestSubscriptionType", ReplyAction="TotalviewTRS/IWCFDatabase/SetAdminRequestSubscriptionTypeResponse")]
        System.Threading.Tasks.Task SetAdminRequestSubscriptionTypeAsync(string subscriptionType, int subscriberid);
        
        [System.ServiceModel.OperationContractAttribute(Action="TotalviewTRS/IWCFDatabase/GetAdminRequestSubscriptionType", ReplyAction="TotalviewTRS/IWCFDatabase/GetAdminRequestSubscriptionTypeResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(TimeServerAPI.TRSException), Action="TotalviewTRS/IWCFDatabase/GetAdminRequestSubscriptionTypeTRSExceptionFault", Name="TRSException", Namespace="http://schemas.datacontract.org/2004/07/Formula.TRS.Server")]
        System.Xml.XmlElement GetAdminRequestSubscriptionType(int subscriberid);
        
        [System.ServiceModel.OperationContractAttribute(Action="TotalviewTRS/IWCFDatabase/GetAdminRequestSubscriptionType", ReplyAction="TotalviewTRS/IWCFDatabase/GetAdminRequestSubscriptionTypeResponse")]
        System.Threading.Tasks.Task<System.Xml.XmlElement> GetAdminRequestSubscriptionTypeAsync(int subscriberid);
        
        [System.ServiceModel.OperationContractAttribute(Action="TotalviewTRS/IWCFDatabase/GetAdminRequestSubscriptionTypeList", ReplyAction="TotalviewTRS/IWCFDatabase/GetAdminRequestSubscriptionTypeListResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(TimeServerAPI.TRSException), Action="TotalviewTRS/IWCFDatabase/GetAdminRequestSubscriptionTypeListTRSExceptionFault", Name="TRSException", Namespace="http://schemas.datacontract.org/2004/07/Formula.TRS.Server")]
        System.Xml.XmlElement GetAdminRequestSubscriptionTypeList();
        
        [System.ServiceModel.OperationContractAttribute(Action="TotalviewTRS/IWCFDatabase/GetAdminRequestSubscriptionTypeList", ReplyAction="TotalviewTRS/IWCFDatabase/GetAdminRequestSubscriptionTypeListResponse")]
        System.Threading.Tasks.Task<System.Xml.XmlElement> GetAdminRequestSubscriptionTypeListAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="TotalviewTRS/IWCFDatabase/GetUsersAgreementIntervals", ReplyAction="TotalviewTRS/IWCFDatabase/GetUsersAgreementIntervalsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(TimeServerAPI.TRSException), Action="TotalviewTRS/IWCFDatabase/GetUsersAgreementIntervalsTRSExceptionFault", Name="TRSException", Namespace="http://schemas.datacontract.org/2004/07/Formula.TRS.Server")]
        System.Xml.XmlElement GetUsersAgreementIntervals(int[] userArray);
        
        [System.ServiceModel.OperationContractAttribute(Action="TotalviewTRS/IWCFDatabase/GetUsersAgreementIntervals", ReplyAction="TotalviewTRS/IWCFDatabase/GetUsersAgreementIntervalsResponse")]
        System.Threading.Tasks.Task<System.Xml.XmlElement> GetUsersAgreementIntervalsAsync(int[] userArray);
        
        [System.ServiceModel.OperationContractAttribute(Action="TotalviewTRS/IWCFDatabase/SaveRejectedRequestToLog", ReplyAction="TotalviewTRS/IWCFDatabase/SaveRejectedRequestToLogResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(TimeServerAPI.TRSException), Action="TotalviewTRS/IWCFDatabase/SaveRejectedRequestToLogTRSExceptionFault", Name="TRSException", Namespace="http://schemas.datacontract.org/2004/07/Formula.TRS.Server")]
        void SaveRejectedRequestToLog(System.Xml.XmlElement Registrations, System.Xml.XmlElement Balances, System.Xml.XmlElement BalanceCorrections, System.DateTime date, int UserId, string Comment, int ModifyingUser, int Validated, int DataChanged, int ValidationChanged, int CorrectionRequestRejected, int CorrectionRequestId);
        
        [System.ServiceModel.OperationContractAttribute(Action="TotalviewTRS/IWCFDatabase/SaveRejectedRequestToLog", ReplyAction="TotalviewTRS/IWCFDatabase/SaveRejectedRequestToLogResponse")]
        System.Threading.Tasks.Task SaveRejectedRequestToLogAsync(System.Xml.XmlElement Registrations, System.Xml.XmlElement Balances, System.Xml.XmlElement BalanceCorrections, System.DateTime date, int UserId, string Comment, int ModifyingUser, int Validated, int DataChanged, int ValidationChanged, int CorrectionRequestRejected, int CorrectionRequestId);
        
        [System.ServiceModel.OperationContractAttribute(Action="TotalviewTRS/IWCFDatabase/GetUserStatisticRights", ReplyAction="TotalviewTRS/IWCFDatabase/GetUserStatisticRightsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(TimeServerAPI.TRSException), Action="TotalviewTRS/IWCFDatabase/GetUserStatisticRightsTRSExceptionFault", Name="TRSException", Namespace="http://schemas.datacontract.org/2004/07/Formula.TRS.Server")]
        System.Xml.XmlElement GetUserStatisticRights(int[] ResourceRecIds);
        
        [System.ServiceModel.OperationContractAttribute(Action="TotalviewTRS/IWCFDatabase/GetUserStatisticRights", ReplyAction="TotalviewTRS/IWCFDatabase/GetUserStatisticRightsResponse")]
        System.Threading.Tasks.Task<System.Xml.XmlElement> GetUserStatisticRightsAsync(int[] ResourceRecIds);
        
        [System.ServiceModel.OperationContractAttribute(Action="TotalviewTRS/IWCFDatabase/SaveUserStatisticRights", ReplyAction="TotalviewTRS/IWCFDatabase/SaveUserStatisticRightsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(TimeServerAPI.TRSException), Action="TotalviewTRS/IWCFDatabase/SaveUserStatisticRightsTRSExceptionFault", Name="TRSException", Namespace="http://schemas.datacontract.org/2004/07/Formula.TRS.Server")]
        System.Xml.XmlElement SaveUserStatisticRights(System.Xml.XmlElement StatisticRights);
        
        [System.ServiceModel.OperationContractAttribute(Action="TotalviewTRS/IWCFDatabase/SaveUserStatisticRights", ReplyAction="TotalviewTRS/IWCFDatabase/SaveUserStatisticRightsResponse")]
        System.Threading.Tasks.Task<System.Xml.XmlElement> SaveUserStatisticRightsAsync(System.Xml.XmlElement StatisticRights);
        
        [System.ServiceModel.OperationContractAttribute(Action="TotalviewTRS/IWCFDatabase/GetStatisticRightsLogMaster", ReplyAction="TotalviewTRS/IWCFDatabase/GetStatisticRightsLogMasterResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(TimeServerAPI.TRSException), Action="TotalviewTRS/IWCFDatabase/GetStatisticRightsLogMasterTRSExceptionFault", Name="TRSException", Namespace="http://schemas.datacontract.org/2004/07/Formula.TRS.Server")]
        System.Xml.XmlElement GetStatisticRightsLogMaster(int RequestingResourceRecId);
        
        [System.ServiceModel.OperationContractAttribute(Action="TotalviewTRS/IWCFDatabase/GetStatisticRightsLogMaster", ReplyAction="TotalviewTRS/IWCFDatabase/GetStatisticRightsLogMasterResponse")]
        System.Threading.Tasks.Task<System.Xml.XmlElement> GetStatisticRightsLogMasterAsync(int RequestingResourceRecId);
        
        [System.ServiceModel.OperationContractAttribute(Action="TotalviewTRS/IWCFDatabase/GetAllTimeAccountGroupRegistrationSums", ReplyAction="TotalviewTRS/IWCFDatabase/GetAllTimeAccountGroupRegistrationSumsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(TimeServerAPI.TRSException), Action="TotalviewTRS/IWCFDatabase/GetAllTimeAccountGroupRegistrationSumsTRSExceptionFault" +
            "", Name="TRSException", Namespace="http://schemas.datacontract.org/2004/07/Formula.TRS.Server")]
        TimeServerAPI.TimeAccountGroupRegistrationSums[] GetAllTimeAccountGroupRegistrationSums(int[] resourceRecIds);
        
        [System.ServiceModel.OperationContractAttribute(Action="TotalviewTRS/IWCFDatabase/GetAllTimeAccountGroupRegistrationSums", ReplyAction="TotalviewTRS/IWCFDatabase/GetAllTimeAccountGroupRegistrationSumsResponse")]
        System.Threading.Tasks.Task<TimeServerAPI.TimeAccountGroupRegistrationSums[]> GetAllTimeAccountGroupRegistrationSumsAsync(int[] resourceRecIds);
        
        [System.ServiceModel.OperationContractAttribute(Action="TotalviewTRS/IWCFDatabase/GetGlobalSettings", ReplyAction="TotalviewTRS/IWCFDatabase/GetGlobalSettingsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(TimeServerAPI.TRSException), Action="TotalviewTRS/IWCFDatabase/GetGlobalSettingsTRSExceptionFault", Name="TRSException", Namespace="http://schemas.datacontract.org/2004/07/Formula.TRS.Server")]
        System.Xml.XmlElement GetGlobalSettings();
        
        [System.ServiceModel.OperationContractAttribute(Action="TotalviewTRS/IWCFDatabase/GetGlobalSettings", ReplyAction="TotalviewTRS/IWCFDatabase/GetGlobalSettingsResponse")]
        System.Threading.Tasks.Task<System.Xml.XmlElement> GetGlobalSettingsAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3")]
    internal interface IWCFDatabaseChannel : TimeServerAPI.IWCFDatabase, System.ServiceModel.IClientChannel
    {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3")]
    internal partial class WCFDatabaseClient : System.ServiceModel.ClientBase<TimeServerAPI.IWCFDatabase>, TimeServerAPI.IWCFDatabase
    {
        
        /// <summary>
        /// Implement this partial method to configure the service endpoint.
        /// </summary>
        /// <param name="serviceEndpoint">The endpoint to configure</param>
        /// <param name="clientCredentials">The client credentials</param>
        static partial void ConfigureEndpoint(System.ServiceModel.Description.ServiceEndpoint serviceEndpoint, System.ServiceModel.Description.ClientCredentials clientCredentials);
        
        public WCFDatabaseClient(EndpointConfiguration endpointConfiguration) : 
                base(WCFDatabaseClient.GetBindingForEndpoint(endpointConfiguration), WCFDatabaseClient.GetEndpointAddress(endpointConfiguration))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public WCFDatabaseClient(EndpointConfiguration endpointConfiguration, string remoteAddress) : 
                base(WCFDatabaseClient.GetBindingForEndpoint(endpointConfiguration), new System.ServiceModel.EndpointAddress(remoteAddress))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public WCFDatabaseClient(EndpointConfiguration endpointConfiguration, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(WCFDatabaseClient.GetBindingForEndpoint(endpointConfiguration), remoteAddress)
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public WCFDatabaseClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress)
        {
        }
        
        public int GetServerVersion()
        {
            return base.Channel.GetServerVersion();
        }
        
        public System.Threading.Tasks.Task<int> GetServerVersionAsync()
        {
            return base.Channel.GetServerVersionAsync();
        }
        
        public void ThrowTRSException(string Message)
        {
            base.Channel.ThrowTRSException(Message);
        }
        
        public System.Threading.Tasks.Task ThrowTRSExceptionAsync(string Message)
        {
            return base.Channel.ThrowTRSExceptionAsync(Message);
        }
        
        public string UserLogin(string UserName, string Password)
        {
            return base.Channel.UserLogin(UserName, Password);
        }
        
        public System.Threading.Tasks.Task<string> UserLoginAsync(string UserName, string Password)
        {
            return base.Channel.UserLoginAsync(UserName, Password);
        }
        
        public string NetLogin(string UserName, string Domain)
        {
            return base.Channel.NetLogin(UserName, Domain);
        }
        
        public System.Threading.Tasks.Task<string> NetLoginAsync(string UserName, string Domain)
        {
            return base.Channel.NetLoginAsync(UserName, Domain);
        }
        
        public TimeServerAPI.AuthenticationOption GetAuthenticationOption()
        {
            return base.Channel.GetAuthenticationOption();
        }
        
        public System.Threading.Tasks.Task<TimeServerAPI.AuthenticationOption> GetAuthenticationOptionAsync()
        {
            return base.Channel.GetAuthenticationOptionAsync();
        }
        
        public System.Xml.XmlElement GetResources()
        {
            return base.Channel.GetResources();
        }
        
        public System.Threading.Tasks.Task<System.Xml.XmlElement> GetResourcesAsync()
        {
            return base.Channel.GetResourcesAsync();
        }
        
        public System.Xml.XmlElement GetStates()
        {
            return base.Channel.GetStates();
        }
        
        public System.Threading.Tasks.Task<System.Xml.XmlElement> GetStatesAsync()
        {
            return base.Channel.GetStatesAsync();
        }
        
        public System.Xml.XmlElement GetUserDayRegistrations(System.DateTime date, int[] UserIDs)
        {
            return base.Channel.GetUserDayRegistrations(date, UserIDs);
        }
        
        public System.Threading.Tasks.Task<System.Xml.XmlElement> GetUserDayRegistrationsAsync(System.DateTime date, int[] UserIDs)
        {
            return base.Channel.GetUserDayRegistrationsAsync(date, UserIDs);
        }
        
        public System.Xml.XmlElement GetUserDayRegistrationsSingleUser(System.DateTime fromDate, System.DateTime toDate, int UserID)
        {
            return base.Channel.GetUserDayRegistrationsSingleUser(fromDate, toDate, UserID);
        }
        
        public System.Threading.Tasks.Task<System.Xml.XmlElement> GetUserDayRegistrationsSingleUserAsync(System.DateTime fromDate, System.DateTime toDate, int UserID)
        {
            return base.Channel.GetUserDayRegistrationsSingleUserAsync(fromDate, toDate, UserID);
        }
        
        public System.Xml.XmlElement GetStateGroupSettings(System.DateTime date, int UserId)
        {
            return base.Channel.GetStateGroupSettings(date, UserId);
        }
        
        public System.Threading.Tasks.Task<System.Xml.XmlElement> GetStateGroupSettingsAsync(System.DateTime date, int UserId)
        {
            return base.Channel.GetStateGroupSettingsAsync(date, UserId);
        }
        
        public System.Xml.XmlElement GetAgreement(System.DateTime date, int UserId)
        {
            return base.Channel.GetAgreement(date, UserId);
        }
        
        public System.Threading.Tasks.Task<System.Xml.XmlElement> GetAgreementAsync(System.DateTime date, int UserId)
        {
            return base.Channel.GetAgreementAsync(date, UserId);
        }
        
        public System.Xml.XmlElement GetCountTypeSettings(System.DateTime date, int UserId)
        {
            return base.Channel.GetCountTypeSettings(date, UserId);
        }
        
        public System.Threading.Tasks.Task<System.Xml.XmlElement> GetCountTypeSettingsAsync(System.DateTime date, int UserId)
        {
            return base.Channel.GetCountTypeSettingsAsync(date, UserId);
        }
        
        public System.Xml.XmlElement GetParameters(System.DateTime date, int UserId)
        {
            return base.Channel.GetParameters(date, UserId);
        }
        
        public System.Threading.Tasks.Task<System.Xml.XmlElement> GetParametersAsync(System.DateTime date, int UserId)
        {
            return base.Channel.GetParametersAsync(date, UserId);
        }
        
        public string GetParameter(string parameterName)
        {
            return base.Channel.GetParameter(parameterName);
        }
        
        public System.Threading.Tasks.Task<string> GetParameterAsync(string parameterName)
        {
            return base.Channel.GetParameterAsync(parameterName);
        }
        
        public System.Xml.XmlElement GetStateBalanceSettings(System.DateTime date, int UserId)
        {
            return base.Channel.GetStateBalanceSettings(date, UserId);
        }
        
        public System.Threading.Tasks.Task<System.Xml.XmlElement> GetStateBalanceSettingsAsync(System.DateTime date, int UserId)
        {
            return base.Channel.GetStateBalanceSettingsAsync(date, UserId);
        }
        
        public System.Xml.XmlElement GetReBalanceSettings(System.DateTime date, int UserId)
        {
            return base.Channel.GetReBalanceSettings(date, UserId);
        }
        
        public System.Threading.Tasks.Task<System.Xml.XmlElement> GetReBalanceSettingsAsync(System.DateTime date, int UserId)
        {
            return base.Channel.GetReBalanceSettingsAsync(date, UserId);
        }
        
        public System.Xml.XmlElement GetBalanceDefinitions()
        {
            return base.Channel.GetBalanceDefinitions();
        }
        
        public System.Threading.Tasks.Task<System.Xml.XmlElement> GetBalanceDefinitionsAsync()
        {
            return base.Channel.GetBalanceDefinitionsAsync();
        }
        
        public int SaveRegistrations(System.Xml.XmlElement Registrations, System.Xml.XmlElement BalanceCorrections, System.DateTime date, int UserId, string Comment, int ModifyingUser, int Validated, int DataChanged, int ValidationChanged, int CorrectionRequestId)
        {
            return base.Channel.SaveRegistrations(Registrations, BalanceCorrections, date, UserId, Comment, ModifyingUser, Validated, DataChanged, ValidationChanged, CorrectionRequestId);
        }
        
        public System.Threading.Tasks.Task<int> SaveRegistrationsAsync(System.Xml.XmlElement Registrations, System.Xml.XmlElement BalanceCorrections, System.DateTime date, int UserId, string Comment, int ModifyingUser, int Validated, int DataChanged, int ValidationChanged, int CorrectionRequestId)
        {
            return base.Channel.SaveRegistrationsAsync(Registrations, BalanceCorrections, date, UserId, Comment, ModifyingUser, Validated, DataChanged, ValidationChanged, CorrectionRequestId);
        }
        
        public void SaveRegistrationsAndBalances(System.Xml.XmlElement Registrations, System.Xml.XmlElement Balances, System.Xml.XmlElement BalanceCorrections, System.DateTime date, int UserId, string Comment, int ModifyingUser, int Validated, int DataChanged, int ValidationChanged, int CorrectionRequestId)
        {
            base.Channel.SaveRegistrationsAndBalances(Registrations, Balances, BalanceCorrections, date, UserId, Comment, ModifyingUser, Validated, DataChanged, ValidationChanged, CorrectionRequestId);
        }
        
        public System.Threading.Tasks.Task SaveRegistrationsAndBalancesAsync(System.Xml.XmlElement Registrations, System.Xml.XmlElement Balances, System.Xml.XmlElement BalanceCorrections, System.DateTime date, int UserId, string Comment, int ModifyingUser, int Validated, int DataChanged, int ValidationChanged, int CorrectionRequestId)
        {
            return base.Channel.SaveRegistrationsAndBalancesAsync(Registrations, Balances, BalanceCorrections, date, UserId, Comment, ModifyingUser, Validated, DataChanged, ValidationChanged, CorrectionRequestId);
        }
        
        public System.Xml.XmlElement SaveRegistrationsAndBalancesFromXElement(System.Xml.XmlElement Registratio)
        {
            return base.Channel.SaveRegistrationsAndBalancesFromXElement(Registratio);
        }
        
        public System.Threading.Tasks.Task<System.Xml.XmlElement> SaveRegistrationsAndBalancesFromXElementAsync(System.Xml.XmlElement Registratio)
        {
            return base.Channel.SaveRegistrationsAndBalancesFromXElementAsync(Registratio);
        }
        
        public void CalculateAlpha(System.DateTime date, int UserId, string Comment, int ModifyingUser, int Validated)
        {
            base.Channel.CalculateAlpha(date, UserId, Comment, ModifyingUser, Validated);
        }
        
        public System.Threading.Tasks.Task CalculateAlphaAsync(System.DateTime date, int UserId, string Comment, int ModifyingUser, int Validated)
        {
            return base.Channel.CalculateAlphaAsync(date, UserId, Comment, ModifyingUser, Validated);
        }
        
        public void CalculateAlphaForPeriod(System.DateTime StartDate, System.DateTime EndDate, int UserId, string Comment, int ModifyingUser)
        {
            base.Channel.CalculateAlphaForPeriod(StartDate, EndDate, UserId, Comment, ModifyingUser);
        }
        
        public System.Threading.Tasks.Task CalculateAlphaForPeriodAsync(System.DateTime StartDate, System.DateTime EndDate, int UserId, string Comment, int ModifyingUser)
        {
            return base.Channel.CalculateAlphaForPeriodAsync(StartDate, EndDate, UserId, Comment, ModifyingUser);
        }
        
        public void CalculateAlphaForPeriodWithSkip(System.DateTime StartDate, System.DateTime EndDate, int UserId, string Comment, int ModifyingUser, string SkipDays)
        {
            base.Channel.CalculateAlphaForPeriodWithSkip(StartDate, EndDate, UserId, Comment, ModifyingUser, SkipDays);
        }
        
        public System.Threading.Tasks.Task CalculateAlphaForPeriodWithSkipAsync(System.DateTime StartDate, System.DateTime EndDate, int UserId, string Comment, int ModifyingUser, string SkipDays)
        {
            return base.Channel.CalculateAlphaForPeriodWithSkipAsync(StartDate, EndDate, UserId, Comment, ModifyingUser, SkipDays);
        }
        
        public TimeServerAPI.TRSUserRight[] GetUserRights(int UserId)
        {
            return base.Channel.GetUserRights(UserId);
        }
        
        public System.Threading.Tasks.Task<TimeServerAPI.TRSUserRight[]> GetUserRightsAsync(int UserId)
        {
            return base.Channel.GetUserRightsAsync(UserId);
        }
        
        public bool HasServerDataChanged(TimeServerAPI.TRSDatabaseDataChangedType ChangedType, System.DateTime Since)
        {
            return base.Channel.HasServerDataChanged(ChangedType, Since);
        }
        
        public System.Threading.Tasks.Task<bool> HasServerDataChangedAsync(TimeServerAPI.TRSDatabaseDataChangedType ChangedType, System.DateTime Since)
        {
            return base.Channel.HasServerDataChangedAsync(ChangedType, Since);
        }
        
        public string RefreshToken(string token)
        {
            return base.Channel.RefreshToken(token);
        }
        
        public System.Threading.Tasks.Task<string> RefreshTokenAsync(string token)
        {
            return base.Channel.RefreshTokenAsync(token);
        }
        
        public System.Xml.XmlElement GetRequests(int ResourceRecId, bool IncludeClosed)
        {
            return base.Channel.GetRequests(ResourceRecId, IncludeClosed);
        }
        
        public System.Threading.Tasks.Task<System.Xml.XmlElement> GetRequestsAsync(int ResourceRecId, bool IncludeClosed)
        {
            return base.Channel.GetRequestsAsync(ResourceRecId, IncludeClosed);
        }
        
        public System.Xml.XmlElement GetCustomFields()
        {
            return base.Channel.GetCustomFields();
        }
        
        public System.Threading.Tasks.Task<System.Xml.XmlElement> GetCustomFieldsAsync()
        {
            return base.Channel.GetCustomFieldsAsync();
        }
        
        public System.Xml.XmlElement GetRequest(int RequestRecId)
        {
            return base.Channel.GetRequest(RequestRecId);
        }
        
        public System.Threading.Tasks.Task<System.Xml.XmlElement> GetRequestAsync(int RequestRecId)
        {
            return base.Channel.GetRequestAsync(RequestRecId);
        }
        
        public System.Xml.XmlElement GetActiveRequestsForResources(int[] UserIDs)
        {
            return base.Channel.GetActiveRequestsForResources(UserIDs);
        }
        
        public System.Threading.Tasks.Task<System.Xml.XmlElement> GetActiveRequestsForResourcesAsync(int[] UserIDs)
        {
            return base.Channel.GetActiveRequestsForResourcesAsync(UserIDs);
        }
        
        public int CreateRequestFromXML(System.Xml.XmlElement RequestDocument)
        {
            return base.Channel.CreateRequestFromXML(RequestDocument);
        }
        
        public System.Threading.Tasks.Task<int> CreateRequestFromXMLAsync(System.Xml.XmlElement RequestDocument)
        {
            return base.Channel.CreateRequestFromXMLAsync(RequestDocument);
        }
        
        public void SetRequestStatus(int RequestId, int NewStatus, string Comment, int MadeBy)
        {
            base.Channel.SetRequestStatus(RequestId, NewStatus, Comment, MadeBy);
        }
        
        public System.Threading.Tasks.Task SetRequestStatusAsync(int RequestId, int NewStatus, string Comment, int MadeBy)
        {
            return base.Channel.SetRequestStatusAsync(RequestId, NewStatus, Comment, MadeBy);
        }
        
        public System.Xml.XmlElement GetTotalBalancesByDateAndResource(System.DateTime Date, int ResourceId)
        {
            return base.Channel.GetTotalBalancesByDateAndResource(Date, ResourceId);
        }
        
        public System.Threading.Tasks.Task<System.Xml.XmlElement> GetTotalBalancesByDateAndResourceAsync(System.DateTime Date, int ResourceId)
        {
            return base.Channel.GetTotalBalancesByDateAndResourceAsync(Date, ResourceId);
        }
        
        public System.Xml.XmlElement GetResourceDayLog(System.DateTime Date, int ResourceId)
        {
            return base.Channel.GetResourceDayLog(Date, ResourceId);
        }
        
        public System.Threading.Tasks.Task<System.Xml.XmlElement> GetResourceDayLogAsync(System.DateTime Date, int ResourceId)
        {
            return base.Channel.GetResourceDayLogAsync(Date, ResourceId);
        }
        
        public System.Xml.XmlElement GetAlphaOmegaState(System.DateTime DateFrom, System.DateTime DateTo, int ResourceId)
        {
            return base.Channel.GetAlphaOmegaState(DateFrom, DateTo, ResourceId);
        }
        
        public System.Threading.Tasks.Task<System.Xml.XmlElement> GetAlphaOmegaStateAsync(System.DateTime DateFrom, System.DateTime DateTo, int ResourceId)
        {
            return base.Channel.GetAlphaOmegaStateAsync(DateFrom, DateTo, ResourceId);
        }
        
        public TimeServerAPI.TRSExportState[] GetExportState(System.DateTime DateFrom, System.DateTime DateTo, int[] UserIDs)
        {
            return base.Channel.GetExportState(DateFrom, DateTo, UserIDs);
        }
        
        public System.Threading.Tasks.Task<TimeServerAPI.TRSExportState[]> GetExportStateAsync(System.DateTime DateFrom, System.DateTime DateTo, int[] UserIDs)
        {
            return base.Channel.GetExportStateAsync(DateFrom, DateTo, UserIDs);
        }
        
        public System.Xml.XmlElement GetUserAverageContractDayLength(System.DateTime VersionDate, int[] UserIDs)
        {
            return base.Channel.GetUserAverageContractDayLength(VersionDate, UserIDs);
        }
        
        public System.Threading.Tasks.Task<System.Xml.XmlElement> GetUserAverageContractDayLengthAsync(System.DateTime VersionDate, int[] UserIDs)
        {
            return base.Channel.GetUserAverageContractDayLengthAsync(VersionDate, UserIDs);
        }
        
        public System.Xml.XmlElement GetUserAttachmentsDefinition(int ResourceID)
        {
            return base.Channel.GetUserAttachmentsDefinition(ResourceID);
        }
        
        public System.Threading.Tasks.Task<System.Xml.XmlElement> GetUserAttachmentsDefinitionAsync(int ResourceID)
        {
            return base.Channel.GetUserAttachmentsDefinitionAsync(ResourceID);
        }
        
        public System.Xml.XmlElement GetUsersAttachmentsDefinition(int[] ResourceID)
        {
            return base.Channel.GetUsersAttachmentsDefinition(ResourceID);
        }
        
        public System.Threading.Tasks.Task<System.Xml.XmlElement> GetUsersAttachmentsDefinitionAsync(int[] ResourceID)
        {
            return base.Channel.GetUsersAttachmentsDefinitionAsync(ResourceID);
        }
        
        public System.Xml.XmlElement GetUserAttachmentsData(int ResourceID, string StateID, string AttachmentID, string ParentFieldID, string ParentID, string UserData)
        {
            return base.Channel.GetUserAttachmentsData(ResourceID, StateID, AttachmentID, ParentFieldID, ParentID, UserData);
        }
        
        public System.Threading.Tasks.Task<System.Xml.XmlElement> GetUserAttachmentsDataAsync(int ResourceID, string StateID, string AttachmentID, string ParentFieldID, string ParentID, string UserData)
        {
            return base.Channel.GetUserAttachmentsDataAsync(ResourceID, StateID, AttachmentID, ParentFieldID, ParentID, UserData);
        }
        
        public int GetResetAtMidnigthStateRecId()
        {
            return base.Channel.GetResetAtMidnigthStateRecId();
        }
        
        public System.Threading.Tasks.Task<int> GetResetAtMidnigthStateRecIdAsync()
        {
            return base.Channel.GetResetAtMidnigthStateRecIdAsync();
        }
        
        public System.Xml.XmlElement GetSumTable(System.DateTime fromDate, System.DateTime toDate, int UserId, int[] WantedBalances)
        {
            return base.Channel.GetSumTable(fromDate, toDate, UserId, WantedBalances);
        }
        
        public System.Threading.Tasks.Task<System.Xml.XmlElement> GetSumTableAsync(System.DateTime fromDate, System.DateTime toDate, int UserId, int[] WantedBalances)
        {
            return base.Channel.GetSumTableAsync(fromDate, toDate, UserId, WantedBalances);
        }
        
        public System.Xml.XmlElement SQLToXElement(string sql, string tableName, string recordName)
        {
            return base.Channel.SQLToXElement(sql, tableName, recordName);
        }
        
        public System.Threading.Tasks.Task<System.Xml.XmlElement> SQLToXElementAsync(string sql, string tableName, string recordName)
        {
            return base.Channel.SQLToXElementAsync(sql, tableName, recordName);
        }
        
        public void SetValidatedPeriodForUsers(System.DateTime DateFrom, System.DateTime DateTo, int[] UserIDs, int Validated, int ModifyingUser)
        {
            base.Channel.SetValidatedPeriodForUsers(DateFrom, DateTo, UserIDs, Validated, ModifyingUser);
        }
        
        public System.Threading.Tasks.Task SetValidatedPeriodForUsersAsync(System.DateTime DateFrom, System.DateTime DateTo, int[] UserIDs, int Validated, int ModifyingUser)
        {
            return base.Channel.SetValidatedPeriodForUsersAsync(DateFrom, DateTo, UserIDs, Validated, ModifyingUser);
        }
        
        public void SetValidatedDaysForUser(System.DateTime[] Days, int UserID, int Validated, int ModifyingUser)
        {
            base.Channel.SetValidatedDaysForUser(Days, UserID, Validated, ModifyingUser);
        }
        
        public System.Threading.Tasks.Task SetValidatedDaysForUserAsync(System.DateTime[] Days, int UserID, int Validated, int ModifyingUser)
        {
            return base.Channel.SetValidatedDaysForUserAsync(Days, UserID, Validated, ModifyingUser);
        }
        
        public void SetAdminNotificationSubscriptionList(int[] PersonRecIdList, int[] CustomFieldRecIdList, int UserID)
        {
            base.Channel.SetAdminNotificationSubscriptionList(PersonRecIdList, CustomFieldRecIdList, UserID);
        }
        
        public System.Threading.Tasks.Task SetAdminNotificationSubscriptionListAsync(int[] PersonRecIdList, int[] CustomFieldRecIdList, int UserID)
        {
            return base.Channel.SetAdminNotificationSubscriptionListAsync(PersonRecIdList, CustomFieldRecIdList, UserID);
        }
        
        public System.Xml.XmlElement GetAdminNotificationSubscriptionList(int UserID)
        {
            return base.Channel.GetAdminNotificationSubscriptionList(UserID);
        }
        
        public System.Threading.Tasks.Task<System.Xml.XmlElement> GetAdminNotificationSubscriptionListAsync(int UserID)
        {
            return base.Channel.GetAdminNotificationSubscriptionListAsync(UserID);
        }
        
        public void SetAdminRequestSubscriptionType(string subscriptionType, int subscriberid)
        {
            base.Channel.SetAdminRequestSubscriptionType(subscriptionType, subscriberid);
        }
        
        public System.Threading.Tasks.Task SetAdminRequestSubscriptionTypeAsync(string subscriptionType, int subscriberid)
        {
            return base.Channel.SetAdminRequestSubscriptionTypeAsync(subscriptionType, subscriberid);
        }
        
        public System.Xml.XmlElement GetAdminRequestSubscriptionType(int subscriberid)
        {
            return base.Channel.GetAdminRequestSubscriptionType(subscriberid);
        }
        
        public System.Threading.Tasks.Task<System.Xml.XmlElement> GetAdminRequestSubscriptionTypeAsync(int subscriberid)
        {
            return base.Channel.GetAdminRequestSubscriptionTypeAsync(subscriberid);
        }
        
        public System.Xml.XmlElement GetAdminRequestSubscriptionTypeList()
        {
            return base.Channel.GetAdminRequestSubscriptionTypeList();
        }
        
        public System.Threading.Tasks.Task<System.Xml.XmlElement> GetAdminRequestSubscriptionTypeListAsync()
        {
            return base.Channel.GetAdminRequestSubscriptionTypeListAsync();
        }
        
        public System.Xml.XmlElement GetUsersAgreementIntervals(int[] userArray)
        {
            return base.Channel.GetUsersAgreementIntervals(userArray);
        }
        
        public System.Threading.Tasks.Task<System.Xml.XmlElement> GetUsersAgreementIntervalsAsync(int[] userArray)
        {
            return base.Channel.GetUsersAgreementIntervalsAsync(userArray);
        }
        
        public void SaveRejectedRequestToLog(System.Xml.XmlElement Registrations, System.Xml.XmlElement Balances, System.Xml.XmlElement BalanceCorrections, System.DateTime date, int UserId, string Comment, int ModifyingUser, int Validated, int DataChanged, int ValidationChanged, int CorrectionRequestRejected, int CorrectionRequestId)
        {
            base.Channel.SaveRejectedRequestToLog(Registrations, Balances, BalanceCorrections, date, UserId, Comment, ModifyingUser, Validated, DataChanged, ValidationChanged, CorrectionRequestRejected, CorrectionRequestId);
        }
        
        public System.Threading.Tasks.Task SaveRejectedRequestToLogAsync(System.Xml.XmlElement Registrations, System.Xml.XmlElement Balances, System.Xml.XmlElement BalanceCorrections, System.DateTime date, int UserId, string Comment, int ModifyingUser, int Validated, int DataChanged, int ValidationChanged, int CorrectionRequestRejected, int CorrectionRequestId)
        {
            return base.Channel.SaveRejectedRequestToLogAsync(Registrations, Balances, BalanceCorrections, date, UserId, Comment, ModifyingUser, Validated, DataChanged, ValidationChanged, CorrectionRequestRejected, CorrectionRequestId);
        }
        
        public System.Xml.XmlElement GetUserStatisticRights(int[] ResourceRecIds)
        {
            return base.Channel.GetUserStatisticRights(ResourceRecIds);
        }
        
        public System.Threading.Tasks.Task<System.Xml.XmlElement> GetUserStatisticRightsAsync(int[] ResourceRecIds)
        {
            return base.Channel.GetUserStatisticRightsAsync(ResourceRecIds);
        }
        
        public System.Xml.XmlElement SaveUserStatisticRights(System.Xml.XmlElement StatisticRights)
        {
            return base.Channel.SaveUserStatisticRights(StatisticRights);
        }
        
        public System.Threading.Tasks.Task<System.Xml.XmlElement> SaveUserStatisticRightsAsync(System.Xml.XmlElement StatisticRights)
        {
            return base.Channel.SaveUserStatisticRightsAsync(StatisticRights);
        }
        
        public System.Xml.XmlElement GetStatisticRightsLogMaster(int RequestingResourceRecId)
        {
            return base.Channel.GetStatisticRightsLogMaster(RequestingResourceRecId);
        }
        
        public System.Threading.Tasks.Task<System.Xml.XmlElement> GetStatisticRightsLogMasterAsync(int RequestingResourceRecId)
        {
            return base.Channel.GetStatisticRightsLogMasterAsync(RequestingResourceRecId);
        }
        
        public TimeServerAPI.TimeAccountGroupRegistrationSums[] GetAllTimeAccountGroupRegistrationSums(int[] resourceRecIds)
        {
            return base.Channel.GetAllTimeAccountGroupRegistrationSums(resourceRecIds);
        }
        
        public System.Threading.Tasks.Task<TimeServerAPI.TimeAccountGroupRegistrationSums[]> GetAllTimeAccountGroupRegistrationSumsAsync(int[] resourceRecIds)
        {
            return base.Channel.GetAllTimeAccountGroupRegistrationSumsAsync(resourceRecIds);
        }
        
        public System.Xml.XmlElement GetGlobalSettings()
        {
            return base.Channel.GetGlobalSettings();
        }
        
        public System.Threading.Tasks.Task<System.Xml.XmlElement> GetGlobalSettingsAsync()
        {
            return base.Channel.GetGlobalSettingsAsync();
        }
        
        public virtual System.Threading.Tasks.Task OpenAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndOpen));
        }
        
        public virtual System.Threading.Tasks.Task CloseAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginClose(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndClose));
        }
        
        private static System.ServiceModel.Channels.Binding GetBindingForEndpoint(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.BasicHttpBinding_IWCFDatabase))
            {
                System.ServiceModel.BasicHttpBinding result = new System.ServiceModel.BasicHttpBinding();
                result.MaxBufferSize = int.MaxValue;
                result.ReaderQuotas = System.Xml.XmlDictionaryReaderQuotas.Max;
                result.MaxReceivedMessageSize = int.MaxValue;
                result.AllowCookies = true;
                result.Security.Mode = System.ServiceModel.BasicHttpSecurityMode.Transport;
                return result;
            }
            if ((endpointConfiguration == EndpointConfiguration.NetTcpBinding_IWCFDatabase))
            {
                System.ServiceModel.NetTcpBinding result = new System.ServiceModel.NetTcpBinding();
                result.MaxBufferSize = int.MaxValue;
                result.ReaderQuotas = System.Xml.XmlDictionaryReaderQuotas.Max;
                result.MaxReceivedMessageSize = int.MaxValue;
                result.Security.Transport.ClientCredentialType = System.ServiceModel.TcpClientCredentialType.None;
                return result;
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.EndpointAddress GetEndpointAddress(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.BasicHttpBinding_IWCFDatabase))
            {
                return new System.ServiceModel.EndpointAddress("https://dev-tv.formula.fo:9000/TVWCF");
            }
            if ((endpointConfiguration == EndpointConfiguration.NetTcpBinding_IWCFDatabase))
            {
                return new System.ServiceModel.EndpointAddress(new System.Uri("net.tcp://dev-tv.formula.fo:9001/TVWCF"), new System.ServiceModel.DnsEndpointIdentity("formula.fo"));
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        public enum EndpointConfiguration
        {
            
            BasicHttpBinding_IWCFDatabase,
            
            NetTcpBinding_IWCFDatabase,
        }
    }
}
